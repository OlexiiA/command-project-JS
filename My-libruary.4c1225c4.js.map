{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAGA,IAAIC,EAAa,EAKDC,SAASC,cAAc,wBAFvC,MAGMC,EAAWF,SAASC,cAAc,0BAClCE,EAAcH,SAASC,cAAc,+BACrCG,EAAgBJ,SAASC,cAAc,iCACvCI,EAAYL,SAASM,eAAe,cACpCC,EAAWP,SAASC,cAAc,mBACxC,IAAIO,EAAS,EAEb,MAAMC,EAAaC,aAAaC,QAAQ,iBACxC,IAAIC,EAAgBC,KAAKC,MAAML,GAE1BC,aAAaC,QAAQ,mBACxBC,EAAgB,CACdG,YAAa,GACbC,UAAW,IAEbN,aAAaO,QAAQ,gBAAiBJ,KAAKK,UAAUN,KAGvDL,EAASY,iBAAiB,SAE1B,WACEC,MAAM,oCACNC,IACAT,EAAgB,CACdG,YAAa,GACbC,UAAW,IAEbN,aAAaO,QAAQ,gBAAiBJ,KAAKK,UAAUN,GAwBvD,IAEA,MAAMU,EAAgBC,MAAMC,SACL3B,EAAA4B,QAClBC,IAAI,sCAAsCF,6DAC1CG,MAAKC,GAAYA,EAASC,OAIxB,SAASC,GAAUC,MAAEA,EAAKC,aAAEA,EAAYC,YAAEA,EAAWC,OAAEA,EAAMV,GAAEA,IACpE,IAAIW,EAAcH,EAAaI,MAAM,EAAG,GAGxC,MAAMC,EAAW,8CAA8Cb,0JAGKS,kHAGpCF,yCARLG,EAAOI,KAAIC,GAASA,EAAMC,OAAMC,KAAK,0CASuBN,kDAIvFjC,EAASwC,mBAAmB,YAAaL,EAC3C,CAEA,SAAShB,IACPnB,EAASyC,UAAY,EACvB,CAUAvC,EAAce,iBAAiB,SA6E/B,WACEpB,EAAa,EACb,MAAM6C,EAAalC,aAAaC,QAAQ,iBAClCkC,EAAgBhC,KAAKC,MAAM8B,GACjCzC,EAAY2C,UAAUC,OAAO,aAC7B3C,EAAc0C,UAAUE,IAAI,aAE5BC,EAAUJ,EAAc9B,YAC1B,IApFAZ,EAAYgB,iBAAiB,SAkE7B,WACEpB,EAAa,EACb,MAAM6C,EAAalC,aAAaC,QAAQ,iBAClCkC,EAAgBhC,KAAKC,MAAM8B,GACjCzC,EAAY2C,UAAUE,IAAI,aAC1B5C,EAAc0C,UAAUC,OAAO,aAE/BE,EAAUJ,EAAc7B,UAC1B,IAzEA,MAAMkC,EAAU,CACdC,WATU3C,EADNI,EAAcI,UAAUoC,OAASxC,EAAcG,YAAYqC,OAC5CxC,EAAcI,UAAUoC,OAExBxC,EAAcG,YAAYqC,OAQ7CC,aAAc,EACdC,aAAc,EACdC,KAAMxD,EACNyD,aAAa,EACbC,mBAAoB,kBACpBC,kBAAmB,iBACnBC,SAAU,CACRJ,KAAM,gDACNK,YACE,iEACFC,WACE,mGAGFC,mBACE,gHAGFC,WACE,sGAMAC,EAAa,IAAIC,EAAAC,GAAJ,CAAe7D,EAAW6C,GAmB7C,SAASiB,EAAkBC,GACzB,IAAIC,EAAatE,EAAa,EAM9B,OALIqE,EAAUhB,OAAS,GAEZgB,EAAUhB,OAASrD,EAAa,KADzCsE,EAAaD,EAAUhB,QAIlBiB,CACT,CAEA9C,eAAe0B,EAAUmB,GACvB/C,IACA2C,EAAWM,QAEX,IAAK,IAAIC,EAAIxE,EAAYwE,EAAIJ,EAAkBC,GAAYG,UACnDjD,EAAc8C,EAAUG,IAAI5C,MAAK6C,GAAU1C,EAAU0C,IAE/D,CAlCAR,EAAWS,GAAG,cAAcC,IAC1B3E,EAAa2E,EAAEnB,KAUXxD,EAAa,EACfA,EAAgC,GAAlBA,EAAa,GACH,IAAfA,IACTA,GAA0B,GAX5BG,EAASyC,UAAY,GACjBxC,EAAY2C,UAAU6B,SAAS,aACjC1B,EAAUrC,EAAcI,WAExBiC,EAAUrC,EAAcG,YAAW,IAiDvCkC,EAAUrC,EAAcG,Y","sources":["src/JS/my-library-localstorage.js"],"sourcesContent":["import axios from 'axios';\nimport Pagination from 'tui-pagination';\n\nlet pageNumber = 0;\n// const queueList = [13, 55, 123, 145, 158, 122, 67, 88, 95, 89, 81, 75, 86, 99, 83, 64, 77, 66, 87];\n// const watchedList = [14,159,124,146,158,129,68,90,96,91,82,76,85,100,198,65,78,62,189];\nconst KEY = 'api_key=2913964819360854cc0ff757d62600b5';\n\nconst gallery = document.querySelector('.gallery--my-library');\nconst filmCard = document.querySelector('.film-card--my-library');\nconst queueButton = document.querySelector('.button-list__switch--queue');\nconst watchedButton = document.querySelector('.button-list__switch--watched');\nconst container = document.getElementById('pagination');\nconst clearBtn = document.querySelector('.button-clearer');\nlet length = 0;\n\nconst savedItems = localStorage.getItem('myLibraryList');\nlet myLibraryList = JSON.parse(savedItems);\n\nif (!localStorage.getItem('myLibraryList')) {\n  myLibraryList = {\n    watchedList: [],\n    queueList: [],\n  };\n  localStorage.setItem('myLibraryList', JSON.stringify(myLibraryList));\n}\n\nclearBtn.addEventListener('click', clearAll);\n\nfunction clearAll() {\n  alert('Do you want to clear my-library?');\n  clearGallery();\n  myLibraryList = {\n    watchedList: [],\n    queueList: [],\n  };\n  localStorage.setItem('myLibraryList', JSON.stringify(myLibraryList));\n\n  // if (queueButton.classList.contains('is-active')) {\n  //   let watchedList = myLibraryList.watchedList.map(movie => movie)\n  //   const clearedObject = {\n  //     watchedList: [],\n  //     queueList: []\n  //   }\n  //   localStorage.setItem('myLibraryList', JSON.stringify(clearedObject))\n\n  //   watchedList = []\n\n  //   return localStorage.setItem('myLibraryList', JSON.stringify(clearedObject))\n\n  // } else if(watchedButton.classList.contains('is-active')){\n  //   let queueList = myLibraryList.queueList.map(movie => movie)\n  //   const clearedObject = {\n  //     watchedList: [],\n  //     queueList: queueList\n  //   }\n  //   queueList = []\n  //   return localStorage.setItem('myLibraryList', JSON.stringify(clearedObject))\n\n  // }\n}\n\nconst findMovieByID = async id => {\n  const answer = await axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?${KEY}&language=en-US`)\n    .then(response => response.data);\n  return answer;\n};\n\nexport function addMarkup({ title, release_date, poster_path, genres, id }) {\n  let releaseYear = release_date.slice(0, 4);\n  let genresTextWithCommas = genres.map(genre => genre.name).join(', ');\n\n  const tamplate = `<li class=\"card gallery__item rotateY\" id=\"${id}\">\n    <a href=\"#\" class=\"card__link\">\n        <div class=\"card__wrapper-img\">\n        <img class=\"card__img\" src=\"https://image.tmdb.org/t/p/w780/${poster_path}\" alt=\"movie's poster\">\n        </div>\n        <div class=\"card__wrapper\">\n        <h3 class=\"card__title\">${title}</h3>\n        <p class=\"card__info\">${genresTextWithCommas} | <span class=\"card__info-genre\">${releaseYear}</span></p>\n        </div>\n    </a>\n  </li>`;\n  filmCard.insertAdjacentHTML('beforeend', tamplate);\n}\n\nfunction clearGallery() {\n  filmCard.innerHTML = '';\n}\n\nfunction listLengthCalculation() {\n  if (myLibraryList.queueList.length > myLibraryList.watchedList.length) {\n    return (length = myLibraryList.queueList.length);\n  } else {\n    return (length = myLibraryList.watchedList.length);\n  }\n}\n\nwatchedButton.addEventListener('click', onWatchedButtonClick);\nqueueButton.addEventListener('click', onQueueButtonClick);\nconst options = {\n  totalItems: listLengthCalculation(),\n  itemsPerPage: 9,\n  visiblePages: 3,\n  page: pageNumber,\n  centerAlign: false,\n  firstItemClassName: 'tui-first-child',\n  lastItemClassName: 'tui-last-child',\n  template: {\n    page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n    currentPage:\n      '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n    moveButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</a>',\n    disabledMoveButton:\n      '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</span>',\n    moreButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n      '<span class=\"tui-ico-ellip\">...</span>' +\n      '</a>',\n  },\n};\n\nconst pagination = new Pagination(container, options);\n\npagination.on('beforeMove', e => {\n  pageNumber = e.page;\n  pageNumberCalculation();\n  filmCard.innerHTML = '';\n  if (queueButton.classList.contains('is-active')) {\n    showFilms(myLibraryList.queueList);\n  } else {\n    showFilms(myLibraryList.watchedList);\n  }\n});\nfunction pageNumberCalculation() {\n  if (pageNumber > 1) {\n    pageNumber = (pageNumber - 1) * 9;\n  } else if (pageNumber === 1) {\n    pageNumber = pageNumber - 1;\n  }\n}\nfunction totalFilmsPerPage(filmsList) {\n  let totalFilms = pageNumber + 9;\n  if (filmsList.length < 9) {\n    totalFilms = filmsList.length;\n  } else if (filmsList.length - pageNumber < 9) {\n    totalFilms = filmsList.length;\n  }\n  return totalFilms;\n}\n\nasync function showFilms(filmsList) {\n  clearGallery();\n  pagination.reset();\n\n  for (let i = pageNumber; i < totalFilmsPerPage(filmsList); i++) {\n    await findMovieByID(filmsList[i]).then(answer => addMarkup(answer));\n  }\n}\n\nfunction onQueueButtonClick() {\n  pageNumber = 0;\n  const savedItems = localStorage.getItem('myLibraryList');\n  const myLibraryList = JSON.parse(savedItems);\n  queueButton.classList.add('is-active');\n  watchedButton.classList.remove('is-active');\n\n  showFilms(myLibraryList.queueList);\n}\n\nfunction onWatchedButtonClick() {\n  pageNumber = 0;\n  const savedItems = localStorage.getItem('myLibraryList');\n  const myLibraryList = JSON.parse(savedItems);\n  queueButton.classList.remove('is-active');\n  watchedButton.classList.add('is-active');\n\n  showFilms(myLibraryList.watchedList);\n}\n\nshowFilms(myLibraryList.watchedList);\n"],"names":["$dIxxU","parcelRequire","$4397b5fcf6c0c98a$var$pageNumber","document","querySelector","$4397b5fcf6c0c98a$var$filmCard","$4397b5fcf6c0c98a$var$queueButton","$4397b5fcf6c0c98a$var$watchedButton","$4397b5fcf6c0c98a$var$container","getElementById","$4397b5fcf6c0c98a$var$clearBtn","$4397b5fcf6c0c98a$var$length","$4397b5fcf6c0c98a$var$savedItems","localStorage","getItem","$4397b5fcf6c0c98a$var$myLibraryList","JSON","parse","watchedList","queueList","setItem","stringify","addEventListener","alert","$4397b5fcf6c0c98a$var$clearGallery","$4397b5fcf6c0c98a$var$findMovieByID","async","id","default","get","then","response","data","$4397b5fcf6c0c98a$export$485cc6bdae71a787","title","release_date","poster_path","genres","releaseYear","slice","tamplate","map","genre","name","join","insertAdjacentHTML","innerHTML","savedItems","myLibraryList","classList","remove","add","$4397b5fcf6c0c98a$var$showFilms","$4397b5fcf6c0c98a$var$options","totalItems","length","itemsPerPage","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","$4397b5fcf6c0c98a$var$pagination","$parcel$interopDefault","$1VFfL","$4397b5fcf6c0c98a$var$totalFilmsPerPage","filmsList","totalFilms","reset","i","answer","on","e","contains"],"version":3,"file":"My-libruary.4c1225c4.js.map"}