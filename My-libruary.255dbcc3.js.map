{"mappings":"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","sources":["src/JS/modal.js"],"sourcesContent":["import axios from 'axios';\n\nconst closeBtn = document.querySelector('.close__btn');\nconst backdrop = document.querySelector('.modal__backdrop');\nconst galleryRef = document.querySelector('.gallery');\nconst modalRef = document.querySelector('.new-info');\n\nlet currentId = 0\n\ncloseBtn.addEventListener('click', closeModal);\nbackdrop.addEventListener('click', closeModalBackdrop);\ngalleryRef.addEventListener('click', getModalCard);\n\n\n// -----------------modal render code--------------------\n\nlet myLibraryList = {\n  watchedList: [],\n  queueList: [],\n  }\n\nfunction closeModal() {\n  backdrop.classList.add('visually-hidden');\n}\n\nfunction openModal() {\n  backdrop.classList.remove('visually-hidden');\n}\n\nfunction closeModalBackdrop(evt) {\n  if (evt.target !== backdrop) {\n    return\n  } \n  closeModal();\n}\n\nasync function loadMoreInfo(ID) {\n  const KEY = 'api_key=2913964819360854cc0ff757d62600b5';\n  const url = `https://api.themoviedb.org/3/movie/${ID}?${KEY}&language=en-US`;\n  const answer = await axios.get(url).then(response => response.data);\n  return answer;\n}\n\nfunction renderModal(ans) {\n  const {\n    poster_path,\n    original_title,\n    title,\n    overview,\n    popularity,\n    vote_average,\n    vote_count,\n    genres,\n  } = ans;\n  // заглушка на отсутствующий постер\n  let filmIMG = `https://image.tmdb.org/t/p/w780${poster_path}`;\n  if (poster_path === null || poster_path === undefined) {\n    filmIMG = './src/images/not-found.png';\n  }\n  // ================================\n  let genresWords = genres.map(genre => genre.name).join(', ');\n  const modalMarkup = `<div class=\"modal__img-thumb\">\n        <img\n        class=\"modal__img\"\n        src=\"${filmIMG}\"\n        alt=\"${original_title}\"\n        />\n        </div>\n        <div class=\"modal__info\">\n        <h2 class=\"modal__title\">${title}</h2>\n        <ul class=\"modal__table\">\n        <li><span class=\"table__name\">Vote / Votes</span><span class=\"table__value\"><span class=\"orange\">${Math.round(vote_average * 10) / 10}</span> / <span class=\"grey\">${vote_count}</span></span></li>\n        <li><span class=\"table__name\">Popularity</span><span class=\"table__value\">${Math.round(popularity * 10) / 10}</span></li>\n        <li><span class=\"table__name\">Original Title</span><span class=\"table__value\">${original_title}</span></li>\n        <li><span class=\"table__name\">Genre</span><span class=\"table__value\">${genresWords}</span></li>\n        </ul>\n        <h3 class=\"modal__about\">about</h3>\n        <p class=\"modal__descr\">${overview}</p>\n        <ul class=\"modal__btns\">\n        <li>\n        <button type=\"button\" class=\"button wtchd_btn\">\n        add to Watched\n        </button>\n        </li>\n        <li>\n        <button type=\"button\" class=\"button queue_btn\">add to queue</button>\n        </li>\n        <li>\n        <button type=\"button\" class=\"button trailer__btn\">watch trailer</button>\n        </li>\n        </ul>\n        </div>`;\n  modalRef.insertAdjacentHTML('beforeend', modalMarkup);\n}\n\nasync function getModalCard(evt) {\n  if (!evt.path.includes(\"li.card.gallery__item\")) {\n    openModal();\n    currentId = evt.path.find(a => a.nodeName === \"LI\").id;\n    let doModal = await loadMoreInfo(currentId);\n    try {\n      if (doModal.original_title !== undefined) {\n      modalRef.innerHTML = '';\n        renderModal(doModal);\n        addToList();\n        // doTrailerListeners();\n        loadTrailerInfo(currentId);\n      } else {\n        modalRef.innerHTML = ''\n        alert('Sorry, nothing was found for your search.')\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n//---------------------modal trailer code------------------------------\n\nfunction doTrailerListeners() {\n  const trailerRef = document.querySelector('.trailer-thumb');\n  const trailerBtnRef = document.querySelector('.trailer__btn');\n  trailerBtnRef.addEventListener('click', showTrailer);\n}\n\nasync function loadTrailerInfo(ID) {\n  const KEY = 'api_key=2913964819360854cc0ff757d62600b5';\n  const url = `https://api.themoviedb.org/3/movie/${ID}/videos?${KEY}&language=en-US`;\n  const answer = await axios.get(url).then(response => response.data);\n\n  return answer;\n}\n\n\n\n// --------------------Local Storage code------------------------------\n\nfunction addToList() {\n  const addWatched = document.querySelector('.wtchd_btn')\n  const addQueue = document.querySelector('.queue_btn')\n\n  addWatched.addEventListener('click', addToWatched)\n  addQueue.addEventListener('click', addToQueue)\n}\n\nfunction addToWatched(e) {\n  if (!myLibraryList.queueList.includes(currentId) && !myLibraryList.watchedList.includes(currentId)) {  \n    myLibraryList.watchedList.push(currentId);\n  }\n    else if(myLibraryList.queueList.includes(currentId)) {\n    addToOtherList(currentId, myLibraryList.queueList, myLibraryList.watchedList)\n  }\n\n  return localStorage.setItem('myLibraryList', JSON.stringify(myLibraryList))\n}\n\nfunction addToQueue(e) {\n  if (!myLibraryList.queueList.includes(currentId) && !myLibraryList.watchedList.includes(currentId)) {   \n    myLibraryList.queueList.push(currentId);\n  }\n  else if(myLibraryList.watchedList.includes(currentId)) {\n    addToOtherList(currentId, myLibraryList.watchedList, myLibraryList.queueList)\n  }\n  return localStorage.setItem('myLibraryList', JSON.stringify(myLibraryList))\n}\n\nfunction addToOtherList(id, removedList, pushedList) {\n    const filmIndex = removedList.indexOf(id) \n    removedList.splice(filmIndex, 1)\n    pushedList.push(id)\n}\n\nfunction localStorageCheck(){\nif (!localStorage.getItem(\"myLibraryList\")){\n  myLibraryList = {\n    watchedList: [],\n    queueList: [],\n  }\n    } else {\n    const savedItems = localStorage.getItem(\"myLibraryList\");\n    myLibraryList = JSON.parse(savedItems);\n  }\n\n  }\n\nlocalStorageCheck()"],"names":["$dIxxU","parcelRequire","$8af1a07d5184fd41$var$closeBtn","document","querySelector","$8af1a07d5184fd41$var$backdrop","$8af1a07d5184fd41$var$galleryRef","$8af1a07d5184fd41$var$modalRef","$8af1a07d5184fd41$var$currentId","addEventListener","$8af1a07d5184fd41$var$closeModal","evt","target","async","path","includes","classList","remove","find","a","nodeName","id","doModal","ID","url","default","get","then","response","data","$8af1a07d5184fd41$var$loadMoreInfo","undefined","original_title","innerHTML","ans","poster_path","title","overview","popularity","vote_average","vote_count","genres","filmIMG","genresWords","map","genre","name","join","modalMarkup","Math","round","insertAdjacentHTML","$8af1a07d5184fd41$var$renderModal","addWatched","addQueue","$8af1a07d5184fd41$var$addToWatched","$8af1a07d5184fd41$var$addToQueue","$8af1a07d5184fd41$var$addToList","$8af1a07d5184fd41$var$loadTrailerInfo","alert","error","console","log","$8af1a07d5184fd41$var$myLibraryList","watchedList","queueList","add","e","$8af1a07d5184fd41$var$addToOtherList","push","localStorage","setItem","JSON","stringify","removedList","pushedList","filmIndex","indexOf","splice","getItem","savedItems","parse","$8af1a07d5184fd41$var$localStorageCheck"],"version":3,"file":"My-libruary.255dbcc3.js.map"}