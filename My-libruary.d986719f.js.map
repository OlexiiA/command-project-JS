{"mappings":"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","sources":["src/JS/my-library-localstorage.js"],"sourcesContent":["import axios from 'axios';\nimport Pagination from 'tui-pagination';\nimport Notiflix from 'notiflix';\n\nlet pageNumber = 0;\n// const queueList = [13, 55, 123, 145, 158, 122, 67, 88, 95, 89, 81, 75, 86, 99, 83, 64, 77, 66, 87];\n// const watchedList = [14,159,124,146,158,129,68,90,96,91,82,76,85,100,198,65,78,62,189];\nconst KEY = 'api_key=2913964819360854cc0ff757d62600b5'\n\nconst gallery = document.querySelector('.gallery--my-library')\nconst filmCard = document.querySelector('.film-card--my-library')\nconst queueButton = document.querySelector('.button-list__switch--queue')\nconst watchedButton = document.querySelector('.button-list__switch--watched')\nconst container = document.getElementById('pagination');\nconst clearBtn = document.querySelector('.button-clearer')\nlet length = 0;\n\nconst savedItems = localStorage.getItem(\"myLibraryList\");\nlet myLibraryList = JSON.parse(savedItems);\n\n\nif (!localStorage.getItem(\"myLibraryList\")) {\n  myLibraryList = {\n    watchedList: [],\n    queueList: [],\n\n  }\n  localStorage.setItem('myLibraryList', JSON.stringify(myLibraryList));\n}\n\nclearBtn.addEventListener('click', clearAll)\n\nfunction clearAll() {\n  // alert('Do you want to clear my-library?')\n  Notiflix.Report.warning('Do you want to clear my-library?', 'It will clean \"Watched\" AND \"Queue\" lists', 'OK');\n\n  clearGallery()\n  myLibraryList = {\n    watchedList: [],\n    queueList: [],\n\n  }\n  localStorage.setItem('myLibraryList', JSON.stringify(myLibraryList));\n  \n\n  const findMovieByID = async (id) => {\n    const answer = await axios.get(`https://api.themoviedb.org/3/movie/${id}?${KEY}&language=en-US`).then(response => response.data);\n    return answer\n  }\n\n\n   function addMarkup({ title, release_date, poster_path, genres, id }) {\n\n    let releaseYear = release_date.slice(0, 4);\n    let genresTextWithCommas = genres.map(genre => genre.name).join(', ')\n    let filmIMG = `https://image.tmdb.org/t/p/w780${poster_path}`;\n    if (poster_path === null || poster_path === undefined) {\n      filmIMG = \"https://upload.wikimedia.org/wikipedia/commons/2/26/512pxIcon-sunset_photo_not_found.png\";\n    }\n    const tamplate =\n\n      `<li class=\"card gallery__item rotateY\" id=\"${id}\">\n    <a href=\"#\" class=\"card__link\">\n        <div class=\"card__wrapper-img\">\n        <img class=\"card__img\" src=${filmIMG} alt=\"movie's poster\">\n        </div>\n        <div class=\"card__wrapper\">\n        <h3 class=\"card__title\">${title}</h3>\n        <p class=\"card__info\">${genresTextWithCommas} | <span class=\"card__info-genre\">${releaseYear}</span></p>\n        </div>\n    </a>\n  </li>`\n    filmCard.insertAdjacentHTML('beforeend', tamplate);\n  };\n\n  function clearGallery() {\n    filmCard.innerHTML = '';\n  }\n\n\n  function listLengthCalculation() {\n    if (myLibraryList.queueList.length > myLibraryList.watchedList.length) {\n      return length = myLibraryList.queueList.length\n\n    } else {\n      return length = myLibraryList.watchedList.length\n\n    }\n  }\n\n  watchedButton.addEventListener('click', onWatchedButtonClick)\n  queueButton.addEventListener('click', onQueueButtonClick)\n  const options = {\n    totalItems: listLengthCalculation(),\n    itemsPerPage: 9,\n    visiblePages: 3,\n    page: pageNumber,\n    centerAlign: false,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n      currentPage:\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>',\n    },\n  };\n\n  const pagination = new Pagination(container, options);\n\n  pagination.on('beforeMove', e => {\n    pageNumber = e.page;\n    pageNumberCalculation()\n    filmCard.innerHTML = '';\n    if (queueButton.classList.contains('is-active')) {\n      showFilms(myLibraryList.queueList)\n    }\n    else {\n      showFilms(myLibraryList.watchedList)\n    }\n\n  });\n  function pageNumberCalculation() {\n    if (pageNumber > 1) {\n      pageNumber = (pageNumber - 1) * 9\n    }\n    else if (pageNumber === 1) {\n      pageNumber = pageNumber - 1\n    }\n  }\n  function totalFilmsPerPage(filmsList) {\n    let totalFilms = pageNumber + 9;\n    if (filmsList.length < 9) {\n      totalFilms = filmsList.length\n    } else if (filmsList.length - pageNumber < 9) {\n      totalFilms = filmsList.length\n    }\n    return totalFilms\n  }\n\n  async function showFilms(filmsList) {\n\n    clearGallery();\n    pagination.reset()\n\n    for (let i = pageNumber; i < totalFilmsPerPage(filmsList); i++) {\n      await findMovieByID(filmsList[i]).then(answer => addMarkup(answer));\n    }\n  }\n\n\n\n\n\n  function onQueueButtonClick() {\n    pageNumber = 0;\n    const savedItems = localStorage.getItem(\"myLibraryList\");\n    const myLibraryList = JSON.parse(savedItems);\n    queueButton.classList.add('is-active');\n    watchedButton.classList.remove('is-active');\n\n    showFilms(myLibraryList.queueList);\n  }\n\n  function onWatchedButtonClick() {\n    pageNumber = 0;\n    const savedItems = localStorage.getItem(\"myLibraryList\");\n    const myLibraryList = JSON.parse(savedItems);\n    queueButton.classList.remove('is-active');\n    watchedButton.classList.add('is-active');\n\n    showFilms(myLibraryList.watchedList);\n  }\n}\n\n\n  showFilms(myLibraryList.watchedList)\n"],"names":["$dIxxU","parcelRequire","$4397b5fcf6c0c98a$var$pageNumber","document","querySelector","$4397b5fcf6c0c98a$var$filmCard","$4397b5fcf6c0c98a$var$queueButton","$4397b5fcf6c0c98a$var$watchedButton","$4397b5fcf6c0c98a$var$container","getElementById","$4397b5fcf6c0c98a$var$clearBtn","$4397b5fcf6c0c98a$var$length","$4397b5fcf6c0c98a$var$savedItems","localStorage","getItem","$4397b5fcf6c0c98a$var$myLibraryList","JSON","parse","watchedList","queueList","setItem","stringify","addEventListener","$parcel$interopDefault","$iU1Pc","Report","warning","clearGallery","findMovieByID","async","id","default","get","then","response","data","addMarkup","title","release_date","poster_path","genres","releaseYear","slice","filmIMG","tamplate","map","genre","name","join","insertAdjacentHTML","innerHTML","savedItems","myLibraryList","classList","remove","add","showFilms1","options","totalItems","length","itemsPerPage","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","pagination","$1VFfL","totalFilmsPerPage","filmsList","totalFilms","reset","i","answer","on","e","contains","showFilms"],"version":3,"file":"My-libruary.d986719f.js.map"}